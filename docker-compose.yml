version: "3.8"

services:
  db:
    image: postgres:14
    container_name: db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DJANGO_DATABASE_NAME}
      - POSTGRES_USER=${DJANGO_DATABASE_USER}
      - POSTGRES_PASSWORD=${DJANGO_DATABASE_PASSWORD}
    healthcheck:
      test: pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      interval: 2s
      retries: 10

  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: web
    command: bash -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy

  minio:
      image: minio/minio
      command: server /data --console-address ":9001"
      environment:
        - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
        - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      ports:
        - "9000:9000"
        - "9001:9001"
      volumes:
        - minio_data:/data
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
        interval: 10s
        retries: 5

  create_minio_buckets:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set local http://minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY};
      mc mb -p local/${MINIO_BUCKET};
      mc policy set public local/${MINIO_BUCKET};
      "

  celery:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: celery
    command: celery -A backend worker --loglevel=info
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - db
      - web
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: celery_beat
    command: celery -A backend beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - db
      - web
      - redis

    restart: unless-stopped
  
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"


volumes:
  postgres_data:
  minio_data: